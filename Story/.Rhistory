scale_x_continuous(labels = scales::dollar_format()) +
labs(title = "Household income by county in Vermont",
subtitle = "2016-2020 American Community Survey",
y = "",
x = "ACS estimate (bars represent margin of error)",
fill = "ACS estimate") +
theme_minimal(base_size = 14)
# Combine the maps
girafe(ggobj = vt_map + vt_plot, width_svg = 12, height_svg = 5) %>%
girafe_options(opts_hover(css = "fill:cyan;"))
# Assuming 'bay' is defined somewhere in your code
vt_income <- get_acs(
geography = "county",
variables = "B19013_001",
state = "CA",
county = bay,
year = 2020,
geometry = TRUE
) %>%
mutate(NAME = str_remove(NAME, " County, California"))
# Choropleth map
vt_map <- ggplot(vt_income, aes(fill = estimate)) +
#geom_sf(aes(color = "white"), size = 0.5) +
geom_sf_interactive(aes(data_id = GEOID)) +
scale_fill_viridis_c(alpha = 0.9) +  # Use viridis palette
theme_void()+
guides(fill = "none")
# Scatter plot with error bars
vt_plot <- ggplot(vt_income, aes(x = estimate, y = reorder(NAME, estimate),
fill = estimate)) +
geom_errorbar(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point_interactive(color = "black", size = 4, shape = 21,
aes(data_id = GEOID)) +
scale_fill_viridis_c() +  # Use viridis palette
scale_x_continuous(labels = scales::dollar_format()) +
labs(title = "Household income by county in Vermont",
subtitle = "2016-2020 American Community Survey",
y = "",
x = "ACS estimate (bars represent margin of error)",
fill = "ACS estimate") +
theme_minimal(base_size = 14)
# Combine the maps
girafe(ggobj = vt_map + vt_plot, width_svg = 12, height_svg = 5) %>%
girafe_options(opts_hover(css = "fill:cyan;"))
# Assuming 'bay' is defined somewhere in your code
vt_income <- get_acs(
geography = "county",
variables = "B19013_001",
state = "CA",
county = bay,
year = 2020,
geometry = TRUE
) %>%
mutate(NAME = str_remove(NAME, " County, California"))
# Choropleth map
vt_map <- ggplot(vt_income, aes(fill = estimate)) +
#geom_sf(aes(color = "white"), size = 0.5) +
geom_sf_interactive(aes(data_id = GEOID)) +
scale_fill_viridis_c(alpha = 0.6) +  # Use viridis palette
theme_void()+
guides(fill = "none")
# Scatter plot with error bars
vt_plot <- ggplot(vt_income, aes(x = estimate, y = reorder(NAME, estimate),
fill = estimate)) +
geom_errorbar(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point_interactive(color = "black", size = 4, shape = 21,
aes(data_id = GEOID)) +
scale_fill_viridis_c() +  # Use viridis palette
scale_x_continuous(labels = scales::dollar_format()) +
labs(title = "Household income by county in Vermont",
subtitle = "2016-2020 American Community Survey",
y = "",
x = "ACS estimate (bars represent margin of error)",
fill = "ACS estimate") +
theme_minimal(base_size = 14)
# Combine the maps
girafe(ggobj = vt_map + vt_plot, width_svg = 12, height_svg = 5) %>%
girafe_options(opts_hover(css = "fill:cyan;"))
# Assuming 'bay' is defined somewhere in your code
vt_income <- get_acs(
geography = "county",
variables = "B19013_001",
state = "CA",
county = bay,
year = 2020,
geometry = TRUE
) %>%
mutate(NAME = str_remove(NAME, " County, California"))
# Choropleth map
vt_map <- ggplot(vt_income, aes(fill = estimate)) +
#geom_sf(aes(color = "white"), size = 0.5) +
geom_sf_interactive(aes(data_id = GEOID)) +
scale_fill_viridis_c() +  # Use viridis palette
theme_void()+
guides(fill = "none")
# Scatter plot with error bars
vt_plot <- ggplot(vt_income, aes(x = estimate, y = reorder(NAME, estimate),
fill = estimate)) +
geom_errorbar(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point_interactive(color = "black", size = 4, shape = 21,
aes(data_id = GEOID)) +
scale_fill_viridis_c() +  # Use viridis palette
scale_x_continuous(labels = scales::dollar_format()) +
labs(title = "Household income by county in Vermont",
subtitle = "2016-2020 American Community Survey",
y = "",
x = "ACS estimate (bars represent margin of error)",
fill = "ACS estimate") +
theme_minimal(base_size = 14)
# Combine the maps
girafe(ggobj = vt_map + vt_plot, width_svg = 12, height_svg = 5) %>%
girafe_options(opts_hover(css = "fill:cyan;"))
# Assuming 'bay' is defined somewhere in your code
vt_income <- get_acs(
geography = "county",
variables = "B19013_001",
state = "CA",
county = bay,
year = 2020,
geometry = TRUE
) %>%
mutate(NAME = str_remove(NAME, " County, California"))
# Choropleth map
vt_map <- ggplot(vt_income, aes(fill = estimate)) +
#geom_sf(aes(color = "white"), size = 0.5) +
geom_sf_interactive(aes(data_id = GEOID)) +
scale_fill_viridis_c() +  # Use viridis palette
theme_void()+
guides(fill = "none")
# Scatter plot with error bars
vt_plot <- ggplot(vt_income, aes(x = estimate, y = reorder(NAME, estimate),
fill = estimate)) +
geom_errorbar(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point_interactive(color = "black", size = 4, shape = 21,
aes(data_id = GEOID)) +
scale_fill_viridis_c() +  # Use viridis palette
scale_x_continuous(labels = scales::dollar_format()) +
labs(title = "Household income by county in the Bay Area",
subtitle = "2016-2020 American Community Survey",
y = "",
x = "Median Income (bars represent margin of error)",
fill = "Median Income") +
theme_minimal(base_size = 14)
# Combine the maps
girafe(ggobj = vt_map + vt_plot, width_svg = 12, height_svg = 5) %>%
girafe_options(opts_hover(css = "fill:cyan;"))
knitr::opts_chunk$set(
echo = TRUE,
warning = FALSE,
message = FALSE,
out.width = '100%',
fig.retina =3
)
library(tidyverse)
library(tidycensus)
library(sf)
library(tidyr)
library(ggplot2)
library(viridis)
library(stringr)
library(mapview)
library(tigris)
library(ggplot2)
library(dplyr)
library(ggbeeswarm)
library(scales)
library(ggiraph)
library(plotly)
bay = c("San Francisco", "Alameda", "Contra Costa", "Marin", "Napa", "San Mateo", "Santa Clara", "Solano", "Sonoma")
san_francisco <- get_acs(
geography = "tract",
variables = "B19013_001", #median income
year = 2021,
state = "CA",
county = bay ,
geometry = TRUE
)
mapview(san_francisco, zcol = "estimate")
# Assuming 'bay' is defined somewhere in your code
vt_income <- get_acs(
geography = "county",
variables = "B19013_001",
state = "CA",
county = bay,
year = 2020,
geometry = TRUE
) %>%
mutate(NAME = str_remove(NAME, " County, California"))
# Choropleth map
vt_map <- ggplot(vt_income, aes(fill = estimate)) +
#geom_sf(aes(color = "white"), size = 0.5) +
geom_sf_interactive(aes(data_id = GEOID)) +
scale_fill_viridis_c() +  # Use viridis palette
theme_void()+
guides(fill = "none")
# Scatter plot with error bars
vt_plot <- ggplot(vt_income, aes(x = estimate, y = reorder(NAME, estimate),
fill = estimate)) +
geom_errorbar(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point_interactive(color = "black", size = 4, shape = 21,
aes(data_id = GEOID)) +
scale_fill_viridis_c() +  # Use viridis palette
scale_x_continuous(labels = scales::dollar_format()) +
labs(title = "Household income by county in the Bay Area",
subtitle = "2016-2020 American Community Survey",
y = "",
x = "Median Income (bars represent margin of error)",
fill = "Median Income") +
theme_minimal(base_size = 14)
# Combine the maps
girafe(ggobj = vt_map + vt_plot, width_svg = 12, height_svg = 5) %>%
girafe_options(opts_hover(css = "fill:cyan;"))
# Assuming 'bay' is defined somewhere in your code
vt_income <- get_acs(
geography = "county",
variables = "B19013_001",
state = "CA",
county = bay,
year = 2020,
geometry = TRUE
) %>%
mutate(NAME = str_remove(NAME, " County, California"))
# Choropleth map
vt_map <- ggplot(vt_income, aes(fill = estimate)) +
#geom_sf(aes(color = "white"), size = 0.5) +
geom_sf_interactive(aes(data_id = GEOID)) +
scale_fill_viridis_c() +  # Use viridis palette
theme_void()+
guides(fill = "none")
# Scatter plot with error bars
vt_plot <- ggplot(vt_income, aes(x = estimate, y = reorder(NAME, estimate),
fill = estimate)) +
geom_errorbar(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point_interactive(color = "black", size = 4, shape = 21,
aes(data_id = GEOID)) +
scale_fill_viridis_c() +  # Use viridis palette
scale_x_continuous(labels = scales::dollar_format()) +
labs(title = "Household income by county in the Bay Area",
subtitle = "2016-2020 American Community Survey",
y = "",
x = "Median Income (bars represent margin of error)",
fill = "Median Income") +
theme_minimal(base_size = 14)
# Combine the maps
girafe(ggobj = vt_map + vt_plot, width_svg = 12, height_svg = 5) %>%
girafe_options(opts_hover(css = "fill:cyan;"))
knitr::opts_chunk$set(
echo = TRUE,
warning = FALSE,
message = FALSE,
out.width = '100%',
fig.retina =3
)
# Assuming 'bay' is defined somewhere in your code
vt_income <- get_acs(
geography = "county",
variables = "B19013_001",
state = "CA",
county = bay,
year = 2020,
geometry = TRUE
) %>%
mutate(NAME = str_remove(NAME, " County, California"))
knitr::opts_chunk$set(
echo = TRUE,
warning = FALSE,
message = FALSE,
out.width = '100%',
fig.retina =3
)
library(tidyverse)
library(tidycensus)
library(sf)
library(tidyr)
library(ggplot2)
library(viridis)
library(stringr)
library(mapview)
library(tigris)
library(ggplot2)
library(dplyr)
library(ggbeeswarm)
library(scales)
library(ggiraph)
library(plotly)
bay = c("San Francisco", "Alameda", "Contra Costa", "Marin", "Napa", "San Mateo", "Santa Clara", "Solano", "Sonoma")
san_francisco <- get_acs(
geography = "tract",
variables = "B19013_001", #median income
year = 2021,
state = "CA",
county = bay ,
geometry = TRUE
)
mapview(san_francisco, zcol = "estimate")
library(patchwork)
vt_income <- get_acs(
geography = "county",
variables = "B19013_001",
state = "CA",
county = bay,
year = 2020,
geometry = TRUE
) %>%
mutate(NAME = str_remove(NAME, " County, Vermont"))
vt_map <- ggplot(vt_income, aes(fill = estimate)) +
geom_sf_interactive(aes(data_id = GEOID)) +
scale_fill_distiller(palette = "Greens",
direction = 1,
guide = "none") +
theme_void()
vt_plot <- ggplot(vt_income, aes(x = estimate, y = reorder(NAME, estimate),
fill = estimate)) +
geom_errorbar(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point_interactive(color = "black", size = 4, shape = 21,
aes(data_id = GEOID)) +
scale_fill_distiller(palette = "Greens", direction = 1,
labels = label_dollar()) +
scale_x_continuous(labels = label_dollar()) +
labs(title = "Household income by county in Vermont",
subtitle = "2016-2020 American Community Survey",
y = "",
x = "ACS estimate (bars represent margin of error)",
fill = "ACS estimate") +
theme_minimal(base_size = 14)
girafe(ggobj = vt_map + vt_plot, width_svg = 10, height_svg = 5) %>%
girafe_options(opts_hover(css = "fill:cyan;"))
# Assuming 'bay' is defined somewhere in your code
vt_income <- get_acs(
geography = "county",
variables = "B19013_001",
state = "CA",
county = bay,
year = 2020,
geometry = TRUE
) %>%
mutate(NAME = str_remove(NAME, " County, California"))
# Choropleth map
vt_map <- ggplot(vt_income, aes(fill = estimate)) +
#geom_sf(aes(color = "white"), size = 0.5) +
geom_sf_interactive(aes(data_id = GEOID)) +
scale_fill_viridis_c() +  # Use viridis palette
theme_void()+
guides(fill = "none")
# Scatter plot with error bars
vt_plot <- ggplot(vt_income, aes(x = estimate, y = reorder(NAME, estimate),
fill = estimate)) +
geom_errorbar(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point_interactive(color = "black", size = 4, shape = 21,
aes(data_id = GEOID)) +
scale_fill_viridis_c() +  # Use viridis palette
scale_x_continuous(labels = scales::dollar_format()) +
labs(title = "Household income by county in the Bay Area",
subtitle = "2016-2020 American Community Survey",
y = "",
x = "Median Income (bars represent margin of error)",
fill = "Median Income") +
theme_minimal(base_size = 14)
# Combine the maps
girafe(ggobj = vt_map + vt_plot, width_svg = 12, height_svg = 5) %>%
girafe_options(opts_hover(css = "fill:cyan;"))
library(tidyverse)
library(tigris)
library(ggplot2)
library(ggiraph)
# Assuming 'bay' is defined somewhere in your code
vt_income <- get_acs(
geography = "county",
variables = "B19013_001",
state = "CA",
county = bay,
year = 2020,
geometry = TRUE
) %>%
mutate(NAME = str_remove(NAME, " County, Vermont"))
# Choropleth map and scatter plot
vt_plot <- ggplot(vt_income, aes(x = estimate, y = reorder(NAME, estimate),
fill = estimate)) +
geom_errorbar(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point_interactive(color = "black", size = 4, shape = 21,
aes(data_id = GEOID)) +
scale_fill_viridis_c(alpha = 0.9, na.value = "white",
labels = scales::dollar_format()) +
scale_x_continuous(labels = scales::dollar_format()) +
labs(title = "Household income by county in Vermont",
subtitle = "2016-2020 American Community Survey",
y = "",
x = "ACS estimate (bars represent margin of error)",
fill = "ACS estimate") +
theme_minimal(base_size = 14)
# Combine the layers within a single ggplot call
vt_map <- ggplot(vt_income, aes(fill = estimate)) +
geom_sf_interactive(aes(data_id = GEOID), color = "white", size = 0.5) +
geom_sf(aes(color = "white"), size = 0.5) +  # Add white outline
geom_sf_interactive(aes(data_id = GEOID)) +
scale_fill_viridis_c(alpha = 0.9, na.value = "white") +  # Use viridis palette
theme_void() +
guides(fill = "none", color = "none")  # Remove the legend
# Combine the map and plot
vt_combined <- vt_map + vt_plot
# Print the combined plot
girafe(ggobj = vt_combined, width_svg = 10, height_svg = 5) %>%
girafe_options(opts_hover(css = "fill:cyan;"))
library(tidyverse)
library(tigris)
library(ggplot2)
library(ggiraph)
# Assuming 'bay' is defined somewhere in your code
vt_income <- get_acs(
geography = "county",
variables = "B19013_001",
state = "CA",
county = bay,
year = 2020,
geometry = TRUE
) %>%
mutate(NAME = str_remove(NAME, " County, Vermont"))
# Choropleth map and scatter plot
vt_plot <- ggplot(vt_income, aes(x = estimate, y = reorder(NAME, estimate),
fill = estimate)) +
geom_errorbar(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point_interactive(color = "black", size = 4, shape = 21,
aes(data_id = GEOID)) +
scale_fill_viridis_c(alpha = 0.9, na.value = "white",
labels = scales::dollar_format()) +
scale_x_continuous(labels = scales::dollar_format()) +
labs(title = "Household income by county in Vermont",
subtitle = "2016-2020 American Community Survey",
y = "",
x = "ACS estimate (bars represent margin of error)",
fill = "ACS estimate") +
theme_minimal(base_size = 14)
# Combine the layers within a single ggplot call
vt_map <- ggplot(vt_income, aes(fill = estimate)) +
geom_sf_interactive(aes(data_id = GEOID), color = "white", size = 0.5) +
geom_sf(aes(color = "white"), size = 0.5) +  # Add white outline
geom_sf_interactive(aes(data_id = GEOID)) +
scale_fill_viridis_c(alpha = 0.9, na.value = "white") +  # Use viridis palette
theme_void() +
guides(fill = "none", color = "none")  # Remove the legend
# Combine the map and plot
vt_combined <- vt_map + vt_plot
# Print the combined plot
girafe(ggobj = vt_combined, width_svg = 12, height_svg = 5) %>%
girafe_options(opts_hover(css = "fill:cyan;"))
# Assuming 'bay' is defined somewhere in your code
vt_income <- get_acs(
geography = "county",
variables = "B19013_001",
state = "CA",
county = bay,
year = 2020,
geometry = TRUE
) %>%
mutate(NAME = str_remove(NAME, " County, California"))
# Choropleth map
vt_map <- ggplot(vt_income, aes(fill = estimate)) +
#geom_sf(aes(color = "white"), size = 0.5) +
geom_sf_interactive(aes(data_id = GEOID)) +
scale_fill_viridis_c() +  # Use viridis palette
theme_void()+
guides(fill = "none")
# Scatter plot with error bars
vt_plot <- ggplot(vt_income, aes(x = estimate, y = reorder(NAME, estimate),
fill = estimate)) +
geom_errorbar(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point_interactive(color = "black", size = 4, shape = 21,
aes(data_id = GEOID)) +
scale_fill_viridis_c() +  # Use viridis palette
scale_x_continuous(labels = scales::dollar_format()) +
labs(title = "Household income by county in the Bay Area",
subtitle = "2016-2020 American Community Survey",
y = "",
x = "Median Income (bars represent margin of error)",
fill = "Median Income") +
theme_minimal(base_size = 14)
# Combine the maps
girafe(ggobj = vt_map + vt_plot, width_svg = 12, height_svg = 5) %>%
girafe_options(opts_hover(css = "fill:cyan;"))
# Assuming 'bay' is defined somewhere in your code
vt_income <- get_acs(
geography = "county",
variables = "B19013_001",
state = "CA",
county = bay,
year = 2020,
geometry = TRUE
) %>%
mutate(NAME = str_remove(NAME, " County, California"))
# Choropleth map
vt_map <- ggplot(vt_income, aes(fill = estimate)) +
geom_sf_interactive(aes(data_id = GEOID)) +
scale_fill_viridis_c() +  # Use viridis palette
theme_void()+
guides(fill = "none")
# Scatter plot with error bars
vt_plot <- ggplot(vt_income, aes(x = estimate, y = reorder(NAME, estimate),
fill = estimate)) +
geom_errorbar(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point_interactive(color = "black", size = 4, shape = 21,
aes(data_id = GEOID)) +
scale_fill_viridis_c() +  # Use viridis palette
scale_x_continuous(labels = scales::dollar_format()) +
labs(title = "Household income by county in the Bay Area",
subtitle = "2016-2020 American Community Survey",
y = "",
x = "Median Income (bars represent margin of error)",
fill = "Median Income") +
theme_minimal(base_size = 14)
# Combine the maps
girafe(ggobj = vt_map + vt_plot, width_svg = 12, height_svg = 5) %>%
girafe_options(opts_hover(css = "fill:cyan;"))

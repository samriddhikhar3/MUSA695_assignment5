fillOpacity = 0.5,
label = ~estimate
) %>%
addLegend(
position = "bottomright",
pal = pal,
values = dallas_bachelors$estimate,
title = "% with bachelor's<br/>degree"
) %>%
addCircleMarkers(
data = marker_data,
lat = ~Lat,
lng = ~Lon,
popup = ~Name,
radius = 6,
color = "blue",
fill = TRUE,
fillOpacity = 1
)
library(ggiraph)
library(scales)
library(tigris)
#where is us_values
us_value_shifted <- us_value %>%
shift_geometry(position = "outside") %>%
mutate(tooltip = paste(NAME, estimate, sep = ": "))
philly_inflow <- get_flows(
geography = "county",
state = "PA",
county = "Philadelphia",
geometry = TRUE
) %>%
filter(variable == "MOVEDIN") %>%
na.omit() %>%
arrange(desc(estimate))
library(mapdeck)
token <- "pk.eyJ1IjoiZWNkZWxtZWxsZSIsImEiOiJjbG8zcTVlNGwwMTRrMmxudXNvMTlpM3A5In0.qv1IRxXEoai7_ZtyOadKpg"
philly_inflow %>%
slice_max(estimate, n = 30) %>%
mutate(weight = estimate / 500) %>%
mapdeck(token = token) %>%
add_arc(origin = "centroid2",
destination = "centroid1",
stroke_width = "weight",
update_view = FALSE)
library(patchwork)
vt_income <- get_acs(
geography = "county",
variables = "B19013_001",
state = "VT",
year = 2020,
geometry = TRUE
) %>%
mutate(NAME = str_remove(NAME, " County, Vermont"))
vt_map <- ggplot(vt_income, aes(fill = estimate)) +
geom_sf_interactive(aes(data_id = GEOID)) +
scale_fill_distiller(palette = "Greens",
direction = 1,
guide = "none") +
theme_void()
vt_plot <- ggplot(vt_income, aes(x = estimate, y = reorder(NAME, estimate),
fill = estimate)) +
geom_errorbar(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point_interactive(color = "black", size = 4, shape = 21,
aes(data_id = GEOID)) +
scale_fill_distiller(palette = "Greens", direction = 1,
labels = label_dollar()) +
scale_x_continuous(labels = label_dollar()) +
labs(title = "Household income by county in Vermont",
subtitle = "2016-2020 American Community Survey",
y = "",
x = "ACS estimate (bars represent margin of error)",
fill = "ACS estimate") +
theme_minimal(base_size = 14)
girafe(ggobj = vt_map + vt_plot, width_svg = 10, height_svg = 5) %>%
girafe_options(opts_hover(css = "fill:cyan;"))
knitr::opts_chunk$set(echo = TRUE)
library(patchwork)
vt_income <- get_acs(
geography = "tract",
variables = "B19013_001",
state = "PA",
county = "Philadelphia",
year = 2020,
geometry = TRUE
) #%>%
#mutate(NAME = str_remove(NAME, " County, Vermont"))
vt_map <- ggplot(vt_income, aes(fill = estimate)) +
geom_sf_interactive(aes(data_id = GEOID)) +
scale_fill_distiller(palette = "Greens",
direction = 1,
guide = "none") +
theme_void()
vt_plot <- ggplot(vt_income, aes(x = estimate, y = reorder(NAME, estimate),
fill = estimate)) +
geom_errorbar(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point_interactive(color = "black", size = 4, shape = 21,
aes(data_id = GEOID)) +
scale_fill_distiller(palette = "Greens", direction = 1,
labels = label_dollar()) +
scale_x_continuous(labels = label_dollar()) +
labs(title = "Household income by county in Vermont",
subtitle = "2016-2020 American Community Survey",
y = "",
x = "ACS estimate (bars represent margin of error)",
fill = "ACS estimate") +
theme_minimal(base_size = 14)
girafe(ggobj = vt_map + vt_plot, width_svg = 10, height_svg = 5) %>%
girafe_options(opts_hover(css = "fill:cyan;"))
library(patchwork)
vt_income <- get_acs(
geography = "tract",
variables = "B19013_001",
state = "PA",
county = "Philadelphia",
year = 2020,
geometry = TRUE
) #%>%
#mutate(NAME = str_remove(NAME, " County, Vermont"))
vt_map <- ggplot(vt_income, aes(fill = estimate)) +
geom_sf_interactive(aes(data_id = GEOID)) +
scale_fill_distiller(palette = "Magma",
direction = 1,
guide = "none") +
theme_void()
vt_plot <- ggplot(vt_income, aes(x = estimate, y = reorder(NAME, estimate),
fill = estimate)) +
geom_errorbar(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point_interactive(color = "black", size = 4, shape = 21,
aes(data_id = GEOID)) +
scale_fill_distiller(palette = "Greens", direction = 1,
labels = label_dollar()) +
scale_x_continuous(labels = label_dollar()) +
labs(title = "Household income by county in Vermont",
subtitle = "2016-2020 American Community Survey",
y = "",
x = "ACS estimate (bars represent margin of error)",
fill = "ACS estimate") +
theme_minimal(base_size = 14)
girafe(ggobj = vt_map + vt_plot, width_svg = 10, height_svg = 5) %>%
girafe_options(opts_hover(css = "fill:cyan;"))
library(patchwork)
vt_income <- get_acs(
geography = "block",
variables = "B19013_001",
state = "PA",
county = "Philadelphia",
year = 2020,
geometry = TRUE
) #%>%
library(patchwork)
vt_income <- get_acs(
geography = "block group",
variables = "B19013_001",
state = "PA",
county = "Philadelphia",
year = 2020,
geometry = TRUE
) #%>%
#mutate(NAME = str_remove(NAME, " County, Vermont"))
vt_map <- ggplot(vt_income, aes(fill = estimate)) +
geom_sf_interactive(aes(data_id = GEOID)) +
scale_fill_distiller(palette = "Greens",
direction = 1,
guide = "none") +
theme_void()
vt_plot <- ggplot(vt_income, aes(x = estimate, y = reorder(NAME, estimate),
fill = estimate)) +
geom_errorbar(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point_interactive(color = "black", size = 4, shape = 21,
aes(data_id = GEOID)) +
scale_fill_distiller(palette = "Greens", direction = 1,
labels = label_dollar()) +
scale_x_continuous(labels = label_dollar()) +
labs(title = "Household income by county in Vermont",
subtitle = "2016-2020 American Community Survey",
y = "",
x = "ACS estimate (bars represent margin of error)",
fill = "ACS estimate") +
theme_minimal(base_size = 14)
girafe(ggobj = vt_map + vt_plot, width_svg = 10, height_svg = 5) %>%
girafe_options(opts_hover(css = "fill:cyan;"))
library(patchwork)
vt_income <- get_acs(
geography = "ZTCA",
variables = "B19013_001",
state = "PA",
county = "Philadelphia",
year = 2020,
geometry = TRUE
) #%>%
library(patchwork)
vt_income <- get_acs(
geography = "zip code",
variables = "B19013_001",
state = "PA",
county = "Philadelphia",
year = 2020,
geometry = TRUE
) #%>%
library(patchwork)
vt_income <- get_acs(
geography = "zip",
variables = "B19013_001",
state = "PA",
county = "Philadelphia",
year = 2020,
geometry = TRUE
) #%>%
library(patchwork)
vt_income <- get_acs(
geography = "zcta",
variables = "B19013_001",
state = "PA",
county = "Philadelphia",
year = 2020,
geometry = TRUE
) #%>%
library(patchwork)
vt_income <- get_acs(
geography = "zip",
variables = "B19013_001",
state = "PA",
county = "Philadelphia",
year = 2020,
geometry = TRUE
) #%>%
library(patchwork)
vt_income <- get_acs(
geography = "ZCTA5",
variables = "B19013_001",
state = "PA",
county = "Philadelphia",
year = 2020,
geometry = TRUE
) #%>%
library(patchwork)
vt_income <- get_acs(
geography = "ZCTA5",
variables = "B19013_001",
state = "PA",
county = "Philadelphia",
year = 2020,
geometry = TRUE
) #%>%
library(patchwork)
vt_income <- get_acs(
geography = "county subdivision",
variables = "B19013_001",
state = "PA",
county = "Philadelphia",
year = 2020,
geometry = TRUE
) #%>%
#mutate(NAME = str_remove(NAME, " County, Vermont"))
vt_map <- ggplot(vt_income, aes(fill = estimate)) +
geom_sf_interactive(aes(data_id = GEOID)) +
scale_fill_distiller(palette = "Greens",
direction = 1,
guide = "none") +
theme_void()
vt_plot <- ggplot(vt_income, aes(x = estimate, y = reorder(NAME, estimate),
fill = estimate)) +
geom_errorbar(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point_interactive(color = "black", size = 4, shape = 21,
aes(data_id = GEOID)) +
scale_fill_distiller(palette = "Greens", direction = 1,
labels = label_dollar()) +
scale_x_continuous(labels = label_dollar()) +
labs(title = "Household income by county in Vermont",
subtitle = "2016-2020 American Community Survey",
y = "",
x = "ACS estimate (bars represent margin of error)",
fill = "ACS estimate") +
theme_minimal(base_size = 14)
girafe(ggobj = vt_map + vt_plot, width_svg = 10, height_svg = 5) %>%
girafe_options(opts_hover(css = "fill:cyan;"))
library(mapview)
library(tigris)
dallas_bachelors <- get_acs(
geography = "tract",
variables = "DP02_0068P",
year = 2020,
state = "TX",
county = "Dallas",
geometry = TRUE
)
mapview(dallas_bachelors, zcol = "estimate")
library(mapview)
library(tigris)
dallas_bachelors <- get_acs(
geography = "tract",
variables = "DP02_0068P",
year = 2020,
state = "PA",
county = "Philadelphia",
geometry = TRUE
)
mapview(dallas_bachelors, zcol = "estimate")
library(mapview)
library(tigris)
dallas_bachelors <- get_acs(
geography = "cbsa",
variables = "DP02_0068P",
year = 2020,
state = "CA",
# county = "Philadelphia",
geometry = TRUE
)
library(mapview)
library(tigris)
dallas_bachelors <- get_acs(
geography = "metropolitan statistical area",
variables = "DP02_0068P",
year = 2020,
state = "CA",
# county = "Philadelphia",
geometry = TRUE
)
library(mapview)
library(tigris)
dallas_bachelors <- get_acs(
geography = "metropolitan statistical area",
variables = "DP02_0068P",
year = 2020,
state = "CA",
# county = "Philadelphia",
geometry = TRUE
)
library(mapview)
library(tigris)
dallas_bachelors <- get_acs(
geography = "metropolitan statistical area",
variables = "DP02_0068P",
year = 2021,
state = "CA",
# county = "Philadelphia",
geometry = TRUE
)
library(mapview)
library(tigris)
dallas_bachelors <- get_acs(
geography = "metropolitan statistical area",
variables = "DP02_0068P",
year = 2021,
state = "CA",
county = "Philadelphia",
geometry = TRUE
)
library(mapview)
library(tigris)
san_francisco_bachelors <- get_acs(
geography = "metropolitan statistical area/micropolitan statistical area",
variables = "DP02_0068P",
year = 2021,
state = "CA",
county = "San Francisco",
geometry = TRUE
)
library(mapview)
library(tigris)
san_francisco_bachelors <- get_acs(
geography = "combined statistical area",
variables = "DP02_0068P",
year = 2021,
state = "CA",
#county = "San Francisco",
geometry = TRUE
)
library(mapview)
library(tigris)
san_francisco_bachelors <- get_acs(
geography = "county",
variables = "DP02_0068P",
year = 2021,
state = "CA",
#county = "San Francisco",
geometry = TRUE
)
mapview(san_francisco_bachelors, zcol = "estimate")
library(mapview)
library(tigris)
san_francisco_bachelors <- get_acs(
geography = "tract",
variables = "DP02_0068P",
year = 2021,
state = "CA",
county = "San Francisco",
geometry = TRUE
)
mapview(san_francisco_bachelors, zcol = "estimate")
library(mapview)
library(tigris)
san_francisco_bachelors <- get_acs(
geography = "tract",
variables = "DP02_0068P",
year = 2021,
state = "CA",
county = "San Francisco", "Oakland", "Berkeley",
geometry = TRUE
)
library(mapview)
library(tigris)
san_francisco_bachelors <- get_acs(
geography = "tract",
variables = "DP02_0068P",
year = 2021,
state = "CA",
county = c("San Francisco", "Oakland", "Berkeley"),
geometry = TRUE
)
library(mapview)
library(tigris)
san_francisco_bachelors <- get_acs(
geography = "tract",
variables = "DP02_0068P",
year = 2021,
state = "CA",
county = c("San Francisco", "Alameda"),
geometry = TRUE
)
mapview(san_francisco_bachelors, zcol = "estimate")
library(mapview)
library(tigris)
san_francisco_bachelors <- get_acs(
geography = "tract",
variables = "DP02_0068P",
year = 2021,
state = "CA",
county = c("San Francisco", "Alameda", "Contra Costa", "Marin", "Napa", "San Mateo", "Santa Clara", "Solano", "Sonoma"),
geometry = TRUE
)
mapview(san_francisco_bachelors, zcol = "estimate")
library(mapview)
library(tigris)
bay = c("San Francisco", "Alameda", "Contra Costa", "Marin", "Napa", "San Mateo", "Santa Clara", "Solano", "Sonoma")
san_francisco_bachelors <- get_acs(
geography = "tract",
variables = "DP02_0068P",
year = 2021,
state = "CA",
county = bay ,
geometry = TRUE
)
mapview(san_francisco_bachelors, zcol = "estimate")
knitr::opts_chunk$set(
echo = TRUE,
warning = FALSE,
message = FALSE,
out.width = '100%',
fig.retina =3
)
library(tidyverse)
library(tidycensus)
library(sf)
library(kableExtra)
library(tidyverse)
library(tidycensus)
library(sf)
library(tidyr)
library(ggplot2)
library(viridis)
library(stringr)
library(mapview)
library(tigris)
library(tidycensus)
library(ggplot2)
library(dplyr)
library(ggbeeswarm)
library(scales)
library(plotly)
bay = c("San Francisco", "Alameda", "Contra Costa", "Marin", "Napa", "San Mateo", "Santa Clara", "Solano", "Sonoma")
san_francisco_bachelors <- get_acs(
geography = "tract",
variables = "DP02_0068P",
year = 2021,
state = "CA",
county = bay ,
geometry = TRUE
)
mapview(san_francisco_bachelors, zcol = "estimate")
knitr::opts_chunk$set(
echo = TRUE,
warning = FALSE,
message = FALSE,
out.width = '100%',
fig.retina =3
)
library(tidyverse)
library(tidycensus)
library(sf)
library(tidyr)
library(ggplot2)
library(viridis)
library(stringr)
library(mapview)
library(tigris)
library(ggplot2)
library(dplyr)
library(ggbeeswarm)
library(scales)
library(plotly)
bay = c("San Francisco", "Alameda", "Contra Costa", "Marin", "Napa", "San Mateo", "Santa Clara", "Solano", "Sonoma")
san_francisco_bachelors <- get_acs(
geography = "tract",
variables = "DP02_0068P",
year = 2021,
state = "CA",
county = bay ,
geometry = TRUE
)
mapview(san_francisco_bachelors, zcol = "estimate")

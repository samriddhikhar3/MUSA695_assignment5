geom_sf_interactive(aes(data_id = GEOID)) +
scale_fill_viridis_c() +  # Use viridis palette
theme_void()+
guides(fill = "none")
# Scatter plot with error bars
vt_plot <-
ggplot(vt_income, aes(x = estimate, y = reorder(NAME, estimate),
fill = estimate)) +
geom_errorbar(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point_interactive(color = "black", size = 4, shape = 21,
aes(data_id = GEOID)) +
scale_fill_viridis_c() +  # Use viridis palette
scale_x_continuous(labels = scales::dollar_format()) +
labs(title = "Household income by county in the Bay Area",
subtitle = "2016-2020 American Community Survey",
y = "",
x = "Median Income (bars represent margin of error)",
fill = "Median Income") +
theme_minimal(base_size = 14)
# Combine the maps
girafe(ggobj = vt_map + vt_plot, width_svg = 12, height_svg = 5) %>%
girafe_options(opts_hover(css = "fill:cyan;"))
ggplot(wfh_value, aes(x = year, y = estimate, group = 1)) +
#  geom_ribbon(aes(ymax = estimate + moe, ymin = estimate - moe),
#             fill = "navy",
#            alpha = 0.4) +
geom_line(color ="#21918c") +
geom_point(color = "#21918c", size = 2) +
theme_minimal(base_size = 12) +
geom_vline(xintercept = "2019", linetype = "longdash", size = 0.3, color = "grey50") +
scale_y_continuous(label = scales::comma)+
#  scale_y_continuous(labels = label_dollar(scale = .001, suffix = "k")) +
labs(title = "Median WFH residents in the Bay Area",
x = "Year",
y = "ACS estimate",
caption = "Shaded area represents margin of error around the ACS estimate") + theme_sk()
ggplot(wfh_value, aes(x = year, y = estimate, group = 1)) +
#  geom_ribbon(aes(ymax = estimate + moe, ymin = estimate - moe),
#             fill = "navy",
#            alpha = 0.4) +
geom_line(color ="#21918c") +
geom_point(color = "#21918c", size = 2) +
theme_minimal(base_size = 12) +
geom_vline(xintercept = "2019", linetype = "longdash", size = 0.3, color = "grey50") +
scale_y_continuous(label = scales::comma)+
#  scale_y_continuous(labels = label_dollar(scale = .001, suffix = "k")) +
labs(title = "Median WFH residents in the Bay Area",
x = "Year",
y = "ACS estimate",
caption = "Shaded area represents margin of error around the ACS estimate") + theme_minimal()
ggplot(wfh_value, aes(x = year, y = estimate, group = 1)) +
#  geom_ribbon(aes(ymax = estimate + moe, ymin = estimate - moe),
#             fill = "navy",
#            alpha = 0.4) +
geom_line(color ="#21918c") +
geom_point(color = "#21918c", size = 2) +
theme_minimal(base_size = 12) +
geom_vline(xintercept = "2019", linetype = "longdash", size = 0.3, color = "grey50") +
scale_y_continuous(label = scales::comma)+
#  scale_y_continuous(labels = label_dollar(scale = .001, suffix = "k")) +
labs(title = "Median WFH residents in the Bay Area",
x = "Year",
y = "ACS estimate",
caption = "Data: US Census Bureau, ACS 5-year estimates") + theme_minimal()
grob_explanation <- grobTree(richtext_grob(
"<span style='background-color:white'>The data illustrates a disparity across the<br>UCD census tracts, with some above the<br>averages and some below.</span>",
x=.3,  y=0.3, hjust=0, gp=gpar(col = "grey30", fontsize=11), box_gp = gpar(col = "white", fill = "white"),
padding = margin(0,0,0,0,"in")))
library(extrafont)
library(gridtext)
library(grid)
grob_explanation <- grobTree(richtext_grob(
"<span style='background-color:white'>The data illustrates a disparity across the<br>UCD census tracts, with some above the<br>averages and some below.</span>",
x=.3,  y=0.3, hjust=0, gp=gpar(col = "grey30", fontsize=11), box_gp = gpar(col = "white", fill = "white"),
padding = margin(0,0,0,0,"in")))
ggplot(wfh_value, aes(x = year, y = estimate, group = 1)) +
#  geom_ribbon(aes(ymax = estimate + moe, ymin = estimate - moe),
#             fill = "navy",
#            alpha = 0.4) +
geom_line(color ="#21918c") +
geom_point(color = "#21918c", size = 2) +
theme_minimal(base_size = 12) +
geom_vline(xintercept = "2019", linetype = "longdash", size = 0.3, color = "grey50") +
scale_y_continuous(label = scales::comma)+
#  scale_y_continuous(labels = label_dollar(scale = .001, suffix = "k")) +
+ annotation_custom(grob_explanation)+
labs(title = "Median WFH residents in the Bay Area",
x = "Year",
y = "ACS estimate",
caption = "Data: US Census Bureau, ACS 5-year estimates") + theme_minimal()
library(extrafont)
library(gridtext)
library(grid)
grob_explanation <- grobTree(richtext_grob(
"<span style='background-color:white'>The data illustrates a disparity across the<br>UCD census tracts, with some above the<br>averages and some below.</span>",
x=.3,  y=0.3, hjust=0, gp=gpar(col = "grey30", fontsize=11), box_gp = gpar(col = "white", fill = "white"),
padding = margin(0,0,0,0,"in")))
ggplot(wfh_value, aes(x = year, y = estimate, group = 1)) +
#  geom_ribbon(aes(ymax = estimate + moe, ymin = estimate - moe),
#             fill = "navy",
#            alpha = 0.4) +
geom_line(color ="#21918c") +
geom_point(color = "#21918c", size = 2) +
theme_minimal(base_size = 12) +
geom_vline(xintercept = "2019", linetype = "longdash", size = 0.3, color = "grey50") +
scale_y_continuous(label = scales::comma)+
#  scale_y_continuous(labels = label_dollar(scale = .001, suffix = "k")) +
annotation_custom(grob_explanation)+
labs(title = "Median WFH residents in the Bay Area",
x = "Year",
y = "ACS estimate",
caption = "Data: US Census Bureau, ACS 5-year estimates") + theme_minimal()
library(extrafont)
library(gridtext)
library(grid)
grob_explanation <- grobTree(richtext_grob(
"<span style='background-color:white'>There has been am obvious spike<br>in the number residents working from home<br>within the Bay Area after 2019.</span>",
x=.3,  y=0.3, hjust=0, gp=gpar(col = "grey30", fontsize=11), box_gp = gpar(col = "white", fill = "white"),
padding = margin(0,0,0,0,"in")))
ggplot(wfh_value, aes(x = year, y = estimate, group = 1)) +
#  geom_ribbon(aes(ymax = estimate + moe, ymin = estimate - moe),
#             fill = "navy",
#            alpha = 0.4) +
geom_line(color ="#21918c") +
geom_point(color = "#21918c", size = 2) +
theme_minimal(base_size = 12) +
geom_vline(xintercept = "2019", linetype = "longdash", size = 0.3, color = "grey50") +
scale_y_continuous(label = scales::comma)+
#  scale_y_continuous(labels = label_dollar(scale = .001, suffix = "k")) +
annotation_custom(grob_explanation)+
labs(title = "Median WFH residents in the Bay Area",
x = "Year",
y = "ACS estimate",
caption = "Data: US Census Bureau, ACS 5-year estimates") + theme_minimal()
library(extrafont)
library(gridtext)
library(grid)
grob_explanation <- grobTree(richtext_grob(
"<span style='background-color:white'>There has been am obvious spike in the<br>number residents working from home<br>within the Bay Area after 2019.</span>",
x=.3,  y=0.3, hjust=0, gp=gpar(col = "grey30", fontsize=11), box_gp = gpar(col = "white", fill = "white"),
padding = margin(0,0,0,0,"in")))
ggplot(wfh_value, aes(x = year, y = estimate, group = 1)) +
#  geom_ribbon(aes(ymax = estimate + moe, ymin = estimate - moe),
#             fill = "navy",
#            alpha = 0.4) +
geom_line(color ="#21918c") +
geom_point(color = "#21918c", size = 2) +
theme_minimal(base_size = 12) +
geom_vline(xintercept = "2019", linetype = "longdash", size = 0.3, color = "grey50") +
scale_y_continuous(label = scales::comma)+
#  scale_y_continuous(labels = label_dollar(scale = .001, suffix = "k")) +
annotation_custom(grob_explanation)+
labs(title = "Median WFH residents in the Bay Area",
x = "Year",
y = "ACS estimate",
caption = "Data: US Census Bureau, ACS 5-year estimates") + theme_minimal()
library(extrafont)
library(gridtext)
library(grid)
grob_explanation <- grobTree(richtext_grob(
"<span style='background-color:white'>There has been am obvious spike in the<br>number residents working from home<br>within the Bay Area after 2019.</span>",
x=.3,  y=0.3, hjust=0, gp=gpar(col = "grey30", fontsize=11), box_gp = gpar(col = "white", fill = "white"),
padding = margin(0,0,0,0,"in")))
ggplot(wfh_value, aes(x = year, y = estimate, group = 1)) +
#  geom_ribbon(aes(ymax = estimate + moe, ymin = estimate - moe),
#             fill = "navy",
#            alpha = 0.4) +
geom_line(color ="#21918c") +
geom_point(color = "#21918c", size = 2) +
theme_minimal(base_size = 12) +
geom_vline(xintercept = "2019", linetype = "longdash", size = 0.3, color = "grey50") +
scale_y_continuous(label = scales::comma)+
#  scale_y_continuous(labels = label_dollar(scale = .001, suffix = "k")) +
annotation_custom(grob_explanation)+
labs(title = "Median WFH residents in the Bay Area",
subtitle = "All 9 Counties",
x = "Year",
y = "ACS estimate",
caption = "Data: US Census Bureau, ACS 5-year estimates") + theme_minimal()
library(extrafont)
library(gridtext)
library(grid)
grob_explanation <- grobTree(richtext_grob(
"<span style='background-color:white'>There has been am obvious spike in the<br>number residents working from home<br>within the Bay Area after 2019.</span>",
x=.3,  y=0.3, hjust=0, gp=gpar(col = "grey30", fontsize=11), box_gp = gpar(col = "white", fill = "white"),
padding = margin(0,0,0,0,"in")))
ggplot(wfh_value, aes(x = year, y = estimate, group = 1)) +
#  geom_ribbon(aes(ymax = estimate + moe, ymin = estimate - moe),
#             fill = "navy",
#            alpha = 0.4) +
geom_line(color ="#21918c") +
geom_point(color = "#21918c", size = 2) +
theme_minimal(base_size = 12) +
geom_vline(xintercept = "2019", linetype = "longdash", size = 0.3, color = "grey50") +
scale_y_continuous(label = scales::comma)+
#  scale_y_continuous(labels = label_dollar(scale = .001, suffix = "k")) +
annotation_custom(grob_explanation)+
labs(title = "Median WFH residents in the Bay Area (all 9 counties)",
x = "Year",
y = "ACS estimate",
caption = "Data: US Census Bureau, ACS 5-year estimates") + theme_minimal()
View(acs_variable_list.2020)
library(patchwork)
vt_income <- get_acs(
geography = "county",
variables = "B25058_001E",
state = "CA",
county = bay,
year = 2020,
geometry = TRUE
) %>%
mutate(NAME = str_remove(NAME, " County, California"))
# Choropleth map
vt_map <- ggplot(vt_income, aes(fill = estimate)) +
geom_sf_interactive(aes(data_id = GEOID)) +
scale_fill_viridis_c() +  # Use viridis palette
theme_void()+
guides(fill = "none")
# Scatter plot with error bars
vt_plot <-
ggplot(vt_income, aes(x = estimate, y = reorder(NAME, estimate),
fill = estimate)) +
geom_errorbar(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point_interactive(color = "black", size = 4, shape = 21,
aes(data_id = GEOID)) +
scale_fill_viridis_c() +  # Use viridis palette
scale_x_continuous(labels = scales::dollar_format()) +
labs(title = "Median Rent by county in the Bay Area",
subtitle = "2016-2020 American Community Survey",
y = "",
x = "Median Income (bars represent margin of error)",
fill = "Median Income") +
theme_minimal(base_size = 14)
# Combine the maps
girafe(ggobj = vt_map + vt_plot, width_svg = 12, height_svg = 5) %>%
girafe_options(opts_hover(css = "fill:cyan;"))
View(acs_variable_list.2020)
View(acs_variable_list.2016)
san_francisco <- get_acs(
geography = "tract",
variables = "B01001_001", #population
year = 2021,
state = "CA",
county = bay ,
geometry = TRUE
)%>%
rename(TotalPop = estimate)
mapview(san_francisco, zcol = "TotalPop")
# Assuming you have a custom palette named 'my_palette'
my_palette <- c("lightblue", "blue", "darkblue")
# Using mapview with the custom palette
mapview(san_francisco, zcol = "TotalPop", col.regions = my_palette)
# Assuming you have a custom palette named 'my_palette'
my_palette <- c['#ffffcc','#c2e699','#78c679','#31a354','#006837']
# Assuming you have a custom palette named 'my_palette'
my_palette <- c('#ffffcc','#c2e699','#78c679','#31a354','#006837')
# Using mapview with the custom palette
mapview(san_francisco, zcol = "TotalPop", col.regions = my_palette)
# Assuming you have a custom palette named 'my_palette'
my_palette <- c('#ca0020','#f4a582','#f7f7f7','#92c5de','#0571b0')
# Using mapview with the custom palette
mapview(san_francisco, zcol = "TotalPop", col.regions = my_palette)
# Assuming you have a custom palette named 'my_palette'
my_palette <- c('#ca0020','#f4a582','#f7f7f7','#92c5de','#0571b0')
# Using mapview with the custom palette
mapview(san_francisco, zcol = "TotalPop", col.regions = my_palette, alpha=0.7)
# Assuming you have a custom palette named 'my_palette'
my_palette <- c('#ca0020','#f4a582','#f7f7f7','#92c5de','#0571b0')
# Using mapview with the custom palette
mapview(san_francisco, zcol = "TotalPop", col.regions = my_palette, alpha=1)
bay_area_2021 <- get_acs(
geography = "tract",
variables = "B01001_001", #population
year = 2021,
state = "CA",
county = bay ,
geometry = TRUE
)%>%
rename(TotalPop = estimate)
mapview(bay_area_2021, zcol = "TotalPop")
bay_area_2018 <- get_acs(
geography = "tract",
variables = "B01001_001", #population
year = 2018,
state = "CA",
county = bay ,
geometry = TRUE
)%>%
rename(TotalPop = estimate)
mapview(bay_area_2018, zcol = "TotalPop")
cols = c('#ca0020','#f4a582','#92c5de','#0571b0')
mapview(bay_area_2021, zcol = "TotalPop",  col.regions = cols)
cols = c('#ca0020','#f4a582','#92c5de','#0571b0')
mapview(bay_area_2018, zcol = "TotalPop",  col.regions = cols)
knitr::opts_chunk$set(
echo = TRUE,
warning = FALSE,
message = FALSE,
out.width = '100%',
fig.retina =3
)
library(tidyverse)
library(tidycensus)
library(sf)
library(tidyr)
library(ggplot2)
library(viridis)
library(stringr)
library(mapview)
library(tigris)
library(ggplot2)
library(dplyr)
library(ggbeeswarm)
library(scales)
library(ggiraph)
library(plotly)
acs_variable_list.2020 <- load_variables(2020, #year
"acs5", #five year ACS estimates
cache = TRUE)
acs_variable_list.2016 <- load_variables(2016, #year
"acs5", #five year ACS estimates
cache = TRUE)
theme_sk <- function(base_size = 12, title_size = 16) {
font <- "sans"
# Create a base theme
base_theme <- theme_minimal() +
theme(
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
axis.title = element_text(family = font, size = 12),
plot.title = element_text(family = font, size = title_size, color = "black"),
#panel.border = element_rect(colour = "grey80", fill = NA, size = 1),
#plot.background = element_blank(),
text = element_text(family = font, color = "black"),
strip.text = element_text(family = font, size = 12),
strip.background = element_rect(fill = "grey80", color = "white"),
axis.text = element_text(family = font, size = 10),
plot.caption = element_text(family = font, hjust = 1),
panel.grid.major = element_line(colour = "grey80", linetype = "longdash", size = 0.1),
plot.subtitle = element_text(family = font, color = "grey50"),
panel.background = element_blank()
)
}
bay = c("San Francisco", "Alameda", "Contra Costa", "Marin", "Napa", "San Mateo", "Santa Clara", "Solano", "Sonoma")
years <- 2009:2021
names(years) <- years
wfh_value <- map_dfr(years, ~{
get_acs(
geography = "county",
variables = "B99087_005",
state = "CA",
county = bay,
year = .x,
survey = "acs5"
)
}, .id = "year")%>%
group_by(year)%>%
summarise(estimate = sum(estimate)) #, moe = max(moe))
library(extrafont)
library(gridtext)
library(grid)
grob_explanation <- grobTree(richtext_grob(
"<span style='background-color:white'>There has been am obvious spike in the<br>number residents working from home<br>within the Bay Area after 2019.</span>",
x=.3,  y=0.3, hjust=0, gp=gpar(col = "grey30", fontsize=11), box_gp = gpar(col = "white", fill = "white"),
padding = margin(0,0,0,0,"in")))
ggplot(wfh_value, aes(x = year, y = estimate, group = 1)) +
#  geom_ribbon(aes(ymax = estimate + moe, ymin = estimate - moe),
#             fill = "navy",
#            alpha = 0.4) +
geom_line(color ="#21918c") +
geom_point(color = "#21918c", size = 2) +
theme_minimal(base_size = 12) +
geom_vline(xintercept = "2019", linetype = "longdash", size = 0.3, color = "grey50") +
scale_y_continuous(label = scales::comma)+
#  scale_y_continuous(labels = label_dollar(scale = .001, suffix = "k")) +
annotation_custom(grob_explanation)+
labs(title = "WFH residents in the Bay Area (all 9 counties)",
x = "Year",
y = "ACS estimate",
caption = "Data: US Census Bureau, ACS 5-year estimates") + theme_minimal()
bay_area_2018 <- get_acs(
geography = "tract",
variables = "B01001_001", #population
year = 2018,
state = "CA",
county = bay ,
geometry = TRUE
)%>%
rename(TotalPop = estimate)
cols = c('#ca0020','#f4a582','#92c5de','#0571b0')
mapview(bay_area_2018, zcol = "TotalPop")
bay_area_2021 <- get_acs(
geography = "tract",
variables = "B01001_001", #population
year = 2021,
state = "CA",
county = bay ,
geometry = TRUE
)%>%
rename(TotalPop = estimate)
mapview(bay_area_2021, zcol = "TotalPop")
library(patchwork)
vt_income <- get_acs(
geography = "county",
variables = "B25058_001E",
state = "CA",
county = bay,
year = 2020,
geometry = TRUE
) %>%
mutate(NAME = str_remove(NAME, " County, California"))
# Choropleth map
vt_map <- ggplot(vt_income, aes(fill = estimate)) +
geom_sf_interactive(aes(data_id = GEOID)) +
scale_fill_viridis_c() +  # Use viridis palette
theme_void()+
guides(fill = "none")
# Scatter plot with error bars
vt_plot <-
ggplot(vt_income, aes(x = estimate, y = reorder(NAME, estimate),
fill = estimate)) +
geom_errorbar(aes(xmin = estimate - moe, xmax = estimate + moe)) +
geom_point_interactive(color = "black", size = 4, shape = 21,
aes(data_id = GEOID)) +
scale_fill_viridis_c() +  # Use viridis palette
scale_x_continuous(labels = scales::dollar_format()) +
labs(title = "Median Rent by county in the Bay Area",
subtitle = "2016-2020 American Community Survey",
y = "",
x = "Median Rent (bars represent margin of error)",
fill = "Median Rent") +
theme_minimal(base_size = 14)
# Combine the maps
girafe(ggobj = vt_map + vt_plot, width_svg = 12, height_svg = 5) %>%
girafe_options(opts_hover(css = "fill:cyan;"))
View(bay_area_2018)
# Assuming you want to set equal intervals, specify the breaks or intervals you desire
intervals <- c(0, 5000, 10000, 15000)
# Using mapview with equal intervals
mapview(bay_area_2018, zcol = "TotalPop", at = intervals)
# Assuming you want to set equal intervals, specify the breaks or intervals you desire
intervals <- c(0, 3750, 7500, 11250, 15000)
# Using mapview with equal intervals
mapview(bay_area_2018, zcol = "TotalPop", at = intervals)
bay_area_2018 <- get_acs(
geography = "county",
variables = "B01001_001", #population
year = 2018,
state = "CA",
county = bay ,
geometry = TRUE
)%>%
rename(TotalPop = estimate)
# Assuming you want to set equal intervals, specify the breaks or intervals you desire
intervals <- c(0, 3750, 7500, 11250, 15000)
# Using mapview with equal intervals
mapview(bay_area_2018, zcol = "TotalPop", at = intervals)
View(bay_area_2018)
# Assuming you want to set equal intervals, specify the breaks or intervals you desire
#intervals <- c(0, 3750, 7500, 11250, 15000)
# Using mapview with equal intervals
mapview(bay_area_2018, zcol = "TotalPop") #, at = intervals)
bay_area_2021 <- get_acs(
geography = "tract",
variables = "B01001_001", #population
year = 2021,
state = "CA",
county = bay ,
geometry = TRUE
)%>%
rename(TotalPop = estimate)
bay_area_2021 <- get_acs(
geography = "county",
variables = "B01001_001", #population
year = 2021,
state = "CA",
county = bay ,
geometry = TRUE
)%>%
rename(TotalPop = estimate)
#intervals <- c(0, 3750, 7500, 11250, 15000)
mapview(bay_area_2021, zcol = "TotalPop")#,  at = intervals)
bay_area_2018 <- get_acs(
geography = "tract",
variables = "B01001_001", #population
year = 2018,
state = "CA",
county = bay ,
geometry = TRUE
)%>%
rename(TotalPop = estimate)
intervals <- c(0, 3750, 7500, 11250, 15000)
# Using mapview with equal intervals
mapview(bay_area_2018, zcol = "TotalPop", at = intervals)
bay_area_2021 <- get_acs(
geography = "tract",
variables = "B01001_001", #population
year = 2021,
state = "CA",
county = bay ,
geometry = TRUE
)%>%
rename(TotalPop = estimate)
intervals <- c(0, 3750, 7500, 11250, 15000)
mapview(bay_area_2021, zcol = "TotalPop")
# Assuming 'bay_area_2018' is your data frame and 'TotalPop' is the column for which you want quartile breaks
quartile_breaks <- quantile(bay_area_2018$TotalPop, probs = c(0, 0.25, 0.5, 0.75, 1))
# Using mapview with quartile breaks
mapview(bay_area_2018, zcol = "TotalPop", at = quartile_breaks)
#intervals <- c(0, 3750, 7500, 11250, 15000)
# Using mapview with equal intervals
#mapview(bay_area_2018, zcol = "TotalPop", at = intervals)
